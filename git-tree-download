#!/bin/bash

# üëâ –§—É–Ω–∫—Ü–∏—è —Å–ø—Ä–∞–≤–∫–∏
usage() {
    echo -e "\nüß∞ USAGE: $0 <–∫–∞—Ç–∞–ª–æ–≥_—Å_–∞—Ä—Ö–∏–≤–∞–º–∏> <–∫–æ—Ä–µ–Ω—å_—Ä–∞–±–æ—á–∏—Ö_—Ä–µ–ø–æ> [--branch <–≤–µ—Ç–∫–∞>] [--dry-run]"
    
    echo -e "\nüîç –û–ø–∏—Å–∞–Ω–∏–µ:"
    echo "  –°–∫—Ä–∏–ø—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç —Ä–∞–±–æ—á–∏–µ Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ —Å –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–º–∏ bare-–∞—Ä—Ö–∏–≤–∞–º–∏ (*.git.tar.xz)."
    echo "  –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Ä—Ö–∏–≤–∞:"
    echo "    1) —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç bare-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥"
    echo "    2) –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏–º—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    echo "    3) –∏—â–µ—Ç —Ä–∞–±–æ—á–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –¥–µ—Ä–µ–≤–µ"
    echo "    4) –ø–æ–¥–∫–ª—é—á–∞–µ—Ç bare-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∫–∞–∫ remote 'wk'"
    echo "    5) –¥–µ–ª–∞–µ—Ç pull –∏–∑ 'wk' –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –≤–µ—Ç–∫—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é master)"
    echo "  –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤ —Ñ–∞–π–ª sync.log."

    echo -e "\nüìå –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:"
    echo "  <–∫–∞—Ç–∞–ª–æ–≥_—Å_–∞—Ä—Ö–∏–≤–∞–º–∏>   ‚Äî –ø—É—Ç—å –∫ –∫–∞—Ç–∞–ª–æ–≥—É, –≥–¥–µ –ª–µ–∂–∞—Ç *.git.tar.xz"
    echo "  <–∫–æ—Ä–µ–Ω—å_—Ä–∞–±–æ—á–∏—Ö_—Ä–µ–ø–æ>  ‚Äî –ø—É—Ç—å –∫ –∫–∞—Ç–∞–ª–æ–≥—É, –≥–¥–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è —Ä–∞–±–æ—á–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
    echo "  --branch <–≤–µ—Ç–∫–∞>       ‚Äî –≤–µ—Ç–∫–∞ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é master)"
    echo "  --dry-run              ‚Äî —Å–∏–º—É–ª—è—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏–π –±–µ–∑ –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
    echo "  --help                 ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"

    echo -e "\nüìã –ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 /mnt/usb/git-sync /home/user/projects"
    echo "  $0 /mnt/usb/git-sync /home/user/projects --branch develop"
    echo "  $0 /mnt/usb/git-sync /home/user/projects --dry-run"
    echo "  $0 /mnt/usb/git-sync /home/user/projects --branch featureX --dry-run"
}

# üëâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–ª–∏ --help
if [[ $# -eq 0 || "$1" == "--help" ]]; then
    usage
    exit 0
fi

ARCHIVE_DIR="$1"
WORK_ROOT="$2"
shift 2 || true

BRANCH="master"
DRY_RUN=false
LOGFILE="sync.log"

# üëâ –†–∞–∑–±–æ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
    case "$1" in
        --branch)
            BRANCH="$2"
            shift 2
            ;;
        --dry-run)
            DRY_RUN=true
            shift
            ;;
        --help)
            usage
            exit 0
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1"
            usage
            exit 1
            ;;
    esac
done

# üëâ –ù–∞—á–∞–ª–æ –ª–æ–≥–∞
echo -e "\n===== –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è $(date '+%Y-%m-%d %H:%M:%S') (–≤–µ—Ç–∫–∞: $BRANCH) =====" | tee -a "$LOGFILE"

for archive in "$ARCHIVE_DIR"/*.git.tar.xz
do
    [ -e "$archive" ] || continue

    tmpdir=$(mktemp -d)
#    tmpdir=${ARCHIVE_DIR}
    if $DRY_RUN; then
        echo "üß™ [dry-run] –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É—é $archive –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥" | tee -a "$LOGFILE"
    else
        tar -xJf "$archive" -C "$tmpdir"
    fi

    repo_name=$(basename "$archive" .git.tar.xz)
    bare_repo="$tmpdir/$repo_name.git"

    echo "üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é $repo_name" | tee -a "$LOGFILE"

    work_repo=$(find "$WORK_ROOT" -type d -name ".git" -exec dirname {} \; | grep "/$repo_name\$" | head -n1)

    if [[ -z "$work_repo" ]]; then
        echo "‚ö†Ô∏è –†–∞–±–æ—á–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π $repo_name –Ω–µ –Ω–∞–π–¥–µ–Ω" | tee -a "$LOGFILE"
        rm -rf "$tmpdir"
        continue
    fi

    if $DRY_RUN; then
        echo "üß™ [dry-run] –ù–∞—à—ë–ª —Ä–∞–±–æ—á–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $work_repo" | tee -a "$LOGFILE"
        echo "üß™ [dry-run] –ü–æ–¥–∫–ª—é—á–∏–ª –±—ã remote 'wk' ‚Üí $bare_repo" | tee -a "$LOGFILE"
        echo "üß™ [dry-run] –í—ã–ø–æ–ª–Ω–∏–ª –±—ã: git pull wk $BRANCH" | tee -a "$LOGFILE"
        echo "üß™ [dry-run] –í—ã–ø–æ–ª–Ω–∏–ª –±—ã: git remote remove wk" | tee -a "$LOGFILE"
    else
        cd "$work_repo" || continue
        git remote remove wk 2>/dev/null
        git remote add wk "$bare_repo"
        echo "‚¨áÔ∏è  –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é $work_repo —Å $repo_name (–≤–µ—Ç–∫–∞: $BRANCH)" | tee -a "$LOGFILE"
        git pull wk "$BRANCH" | tee -a "$LOGFILE"
        git remote remove wk | tee -a "$LOGFILE"
        cd - > /dev/null
    fi

    rm -rf "$tmpdir"
done

echo "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ. –õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ $LOGFILE"
