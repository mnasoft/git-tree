#!/bin/bash

USAGE="
Usage: $(basename $0) COMMAND [BRANCH]

Command: 
        pull - получение изменений с сервера;
        push      - отправка изменений на сервер;
        pull_push - получение и отправка изменений;
        add       - добавление изменений;
        commit    - фиксация изменений;
        all       - получение изменений с сервера, добавление изменений,
                    фиксация изменений, отправка изменений на сервер.

Описание:

         Выполняет поиск репозиториев git, начиная с текущего
         каталога. Для каздого из, найденных репозиториев выполняет
         команду для всех удаленных репозиториев.
"

func_usage_show ()
{
    echo "${USAGE}"
}

func_git_push ()
{
    for rpo in `git remote`
    do
        echo "--------------------"
        echo ">>> git push ${rpo} ${DO_BRANCH} <<<"
        git push ${rpo} ${DO_BRANCH}
        echo "--------------------"
    done
}

func_git_pull ()
{
    for rpo in `git remote`
    do
        echo "--------------------"
        echo ">>> git pull ${rpo} ${DO_BRANCH} <<<"
        git pull ${rpo} ${DO_BRANCH}
        echo "--------------------"
    done
}

func_git_add ()
{

    echo '--------------------'
    echo '>>> git add `find . -name "*.lisp" -o -name "*.org" -o -name "*.scr" -o -name "*.asd"` <<<'
    git add `find . -name "*.lisp" -o -name "*.org" -o -name "*.scr" -o -name "*.asd"`
    echo '--------------------'
}

func_git_commit ()
{
    echo '--------------------'
    echo '>>> git commit -a -m "`date -u`" <<<'
    git commit -a -m "`date -u`"
    echo '--------------------'
}

func_git_push_or_pull ()
{
    for rpo in `git remote`
    do
    echo '--------------------'
    echo ">>> git ${COMMAND} ${rpo} ${DO_BRANCH} <<<"
    git ${COMMAND} ${rpo} ${DO_BRANCH}
    echo '--------------------'
    done
}

func_git_command_branch ()
{
    CURRENT_BRANCH=`git branch --no-color | grep \*  | cut -d ' ' -f 2`
    if ! [[ -z "${BRANCH}" ]]
    then
        DO_BRANCH="${BRANCH}"
    else
        DO_BRANCH="${CURRENT_BRANCH}"
    fi
    
    if [[ ${COMMAND} == "push" || ${COMMAND} == "pull" ]]
    then
        func_git_push_or_pull
    fi
    
    if [[ ${COMMAND} == "pull_push" ]]
    then
        func_git_pull
        func_git_push
    fi
    
    if [[ ${COMMAND} == "add" ]]
    then
        func_git_add
    fi
    
    if [[ ${COMMAND} == "commit" ]]
    then
        func_git_commit
    fi
    
    if [[ ${COMMAND} == "all" ]]
    then
        func_git_pull
        func_git_add
        func_git_commit
        func_git_push
    fi
}

func_git_command ()
{
    CDIR=`pwd`
    for i in `find . -name ".git"`
    do
        echo "================================="
        cd ${CDIR}/${i}/../
        echo "`pwd`"
        echo "---------------------------------"
        func_git_command_branch
        echo "+++++++++++++++++++++++++++++++++"
    done
    cd ${CDIR}
}

if ! [[ -z "$2" ]]
then
    BRANCH=$2
    echo ${BRANCH}
fi

if [ -z "$1" ]
then
    func_usage_show
else
    COMMAND=$1
    if [[ ${COMMAND} == "push" || ${COMMAND} == "pull" || ${COMMAND} == "pull_push" || ${COMMAND} == "add" || ${COMMAND} == "commit" || ${COMMAND} == "all" ]]
    then
        func_git_command
    else
        echo "Unknown command: ${COMMAND}"
        func_usage_show
    fi
fi
