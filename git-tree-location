#!/bin/bash

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ–º–∞—à–Ω—é—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤ —Ç.—á. –ø–æ–¥ sudo)
if [[ -n "$SUDO_USER" ]]; then
  USER_HOME=$(eval echo "~$SUDO_USER")
else
  USER_HOME="$HOME"
fi

CONFIG_DIR="$USER_HOME/.git-tree"
CONFIG_FILE="$CONFIG_DIR/locations.conf"

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ñ–∏–≥
load_config() {
  mkdir -p "$CONFIG_DIR"
  if [[ ! -f "$CONFIG_FILE" ]]; then
    echo "üßæ –°–æ–∑–¥–∞—é –∫–æ–Ω—Ñ–∏–≥: $CONFIG_FILE"
    cat > "$CONFIG_FILE" <<EOF
# ~/.git-tree/locations.conf
LOCATIONS=()

# NAME_<id> ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è
# CUSTOM_URL_GIT[<id>] ‚Äî –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–∫–∞–∑–∞—Ç—å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É—Ç—å
EOF
  fi
  source "$CONFIG_FILE"
}

# üîç usage
print_usage() {
    echo "üß© –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "  git-tree-location add <id> [--name=–∏–º—è] [--url=URL]"
    echo "  git-tree-location list"
    echo "  git-tree-location show <id>"
    echo "  git-tree-location remove <id>"
}

# ===========================
# üé¨ –ù–∞—á–∞–ª–æ
# ===========================
cmd="$1"
shift || true  # –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É –µ—Å–ª–∏ –ø—É—Å—Ç–æ

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
loc=""
custom_name=""
custom_url=""

# –û–ø—Ü–∏–∏ —Å –ø–∞—Ä—Å–∏–Ω–≥–æ–º
while [[ $# -gt 0 ]]; do
  case "$1" in
    --name=*) custom_name="${1#--name=}" ;;
    --url=*)  custom_url="${1#--url=}" ;;
    add|remove|show) loc="$2"; shift ;;
    *) [[ -z "$loc" ]] && loc="$1" ;;
  esac
  shift
done

load_config

case "$cmd" in
    add)
        [[ -z "$loc" ]] && { echo "‚ùó –¢—Ä–µ–±—É–µ—Ç—Å—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: git-tree-location add <id>"; exit 1; }
        for x in "${LOCATIONS[@]}"; do
            [[ "$x" == "$loc" ]] && echo "‚ö†Ô∏è –õ–æ–∫–∞—Ü–∏—è '$loc' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" && exit 1
        done
        echo "‚úÖ –î–æ–±–∞–≤–ª—è—é –ª–æ–∫–∞—Ü–∏—é: $loc"
        {
            echo ""
            echo "LOCATIONS+=('$loc') # –î–æ–±–∞–≤–ª–µ–Ω–æ: $(date '+%F %T')"
            [[ -n "$custom_name" && "$custom_name" != "$loc" ]] && echo "NAME_${loc}='${custom_name}'"
            [[ -n "$custom_url" ]] && echo "CUSTOM_URL_GIT[$loc]=\"$custom_url\""
        } >> "$CONFIG_FILE"
        echo "üíæ –û–±–Ω–æ–≤–ª–µ–Ω–æ: $CONFIG_FILE"
        ;;
    list)
        echo "üìú –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏:"
        for x in "${LOCATIONS[@]}"; do
            name_var="NAME_${x}"
            name="${!name_var:-$x}"
            url="${CUSTOM_URL_GIT[$x]:-(–ø–æ —à–∞–±–ª–æ–Ω—É)}"
            printf "üî∏ %-10s | üìõ %-15s | üåê %s\n" "$x" "$name" "$url"
        done
        ;;
    show)
        [[ -z "$loc" ]] && { echo "‚ùó –£–∫–∞–∂–∏—Ç–µ ID: git-tree-location show <id>"; exit 1; }
        found=false
        for x in "${LOCATIONS[@]}"; do
            [[ "$x" == "$loc" ]] && found=true && break
        done
        if ! $found; then echo "‚ùå –õ–æ–∫–∞—Ü–∏—è '$loc' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"; exit 1; fi

        name_var="NAME_${loc}"
        name="${!name_var:-$loc}"
        
        # GIT URL
        if [[ -n "${CUSTOM_URL_GIT[$loc]}" ]]; then
            git_url="${CUSTOM_URL_GIT[$loc]}"
            git_note="(—É–∫–∞–∑–∞–Ω –≤—Ä—É—á–Ω—É—é)"
        else
            git_base="${URL_GIT_TREE:-$HOME/.git-tree}"
            git_url="${git_base}/git/${loc}"
            git_note="(–ø–æ —à–∞–±–ª–æ–Ω—É)"
        fi
        
        # XZ –ø—É—Ç—å
        xz_url="${URL_GIT_TREE:-$HOME/.git-tree}/xz/${loc}"

        # TAR –∞—Ä—Ö–∏–≤
        tar_name="${name}.tar"

        echo "‚ÑπÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è '$loc':"
        echo "  ID         : $loc"
        echo "  NAME       : $name"
        echo "  GIT URL    : $git_url $git_note"
        echo "  XZ  PATH   : $xz_url (–ø–æ —à–∞–±–ª–æ–Ω—É)"
        echo "  TAR FILE   : $tar_name (–ø–æ —à–∞–±–ª–æ–Ω—É)"
        ;;

    remove)
        [[ -z "$loc" ]] && { echo "‚ùó –£–∫–∞–∂–∏—Ç–µ ID: git-tree-location remove <id>"; exit 1; }

        if ! grep -q "^LOCATIONS+=('${loc}')" "$CONFIG_FILE"; then
            echo "‚ùå –õ–æ–∫–∞—Ü–∏—è '$loc' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥–µ"
            exit 1
        fi
        echo "üóëÔ∏è –£–¥–∞–ª—è—é –±–ª–æ–∫ '$loc' –∏–∑ $CONFIG_FILE..."
        # –£–¥–∞–ª—è–µ–º –±–ª–æ–∫ –æ—Ç —Å—Ç—Ä–æ–∫–∏ LOCATIONS+=('loc') –¥–æ –ø–µ—Ä–≤–æ–π –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ

        awk -v id="$loc" '
BEGIN { drop = 0 }
{
 if ($0 ~ ("^LOCATIONS\\+=\\(\x27" id "\x27\\)")) { drop = 1; next }
      if (drop && NF == 0) { drop = 0; next }
      if (!drop) print
}
' "$CONFIG_FILE" > "$CONFIG_FILE.tmp" && mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"
        echo "‚úÖ –ë–ª–æ–∫ '$loc' —É–¥–∞–ª—ë–Ω"
        ;;
    *)
        print_usage
        ;;
esac
