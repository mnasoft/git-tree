#!/bin/bash

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ–º–∞—à–Ω—é—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤ —Ç. —á. –ø—Ä–∏ sudo)
if [[ -n "$SUDO_USER" ]]; then
  USER_HOME=$(eval echo "~$SUDO_USER")
else
  USER_HOME="$HOME"
fi

CONFIG_DIR="$USER_HOME/.git-tree"
CONFIG_FILE="$CONFIG_DIR/locations.conf"

load_config() {
  mkdir -p "$CONFIG_DIR"

  if [[ ! -f "$CONFIG_FILE" ]]; then
    echo "üßæ –°–æ–∑–¥–∞—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: $CONFIG_FILE"
    cat > "$CONFIG_FILE" <<EOF
# ~/.git-tree/locations.conf
LOCATIONS=()
# NAME_<id> ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è
# CUSTOM_URL_GIT[<id>] ‚Äî –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –∫ Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é
EOF
  fi

  source "$CONFIG_FILE"
}

write_config_line() {
  echo "$1" >> "$CONFIG_FILE"
}

# ============ –ü–û–î–ö–û–ú–ê–ù–î–´ ============
cmd="$1"
loc="$2"
shift 2

# –ü–∞—Ä—Å–∏–º –æ–ø—Ü–∏–∏
for arg in "$@"; do
  case "$arg" in
    --name=*) custom_name="${arg#--name=}" ;;
    --url=*)  custom_url="${arg#--url=}" ;;
    *) echo "‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $arg" && exit 1 ;;
  esac
done

load_config

case "$cmd" in
  add)
    if [[ -z "$loc" ]]; then echo "‚ùó –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: git-tree-location add <id> [--name=...] [--url=...]" && exit 1; fi
    for existing in "${LOCATIONS[@]}"; do
      [[ "$existing" == "$loc" ]] && echo "‚ö†Ô∏è '$loc' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" && exit 1
    done

    echo "‚úÖ –î–æ–±–∞–≤–ª—è—é –ª–æ–∫–∞—Ü–∏—é: $loc"
    {
      echo ""
      echo "# –î–æ–±–∞–≤–ª–µ–Ω–æ: $(date '+%F %T')"
      echo "LOCATIONS+=('$loc')"
      [[ -n "$custom_name" && "$custom_name" != "$loc" ]] && echo "NAME_${loc}='${custom_name}'"
      [[ -n "$custom_url" ]] && echo "CUSTOM_URL_GIT[$loc]=\"$custom_url\""
    } >> "$CONFIG_FILE"
    echo "üíæ –û–±–Ω–æ–≤–ª–µ–Ω–æ: $CONFIG_FILE"
    ;;

  list)
    echo "üìú –õ–æ–∫–∞—Ü–∏–∏:"
    for loc in "${LOCATIONS[@]}"; do
      name_var="NAME_${loc}"
      name="${!name_var:-$loc}"
      url="${CUSTOM_URL_GIT[$loc]:-"(–ø–æ —à–∞–±–ª–æ–Ω—É)"}"
      printf "üî∏ %-10s | üìõ %-15s | üåê %s\n" "$loc" "$name" "$url"
    done
    ;;

  show)
    if [[ -z "$loc" ]]; then echo "‚ùó –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: git-tree-location show <id>" && exit 1; fi
    in_list=false
    for entry in "${LOCATIONS[@]}"; do
      [[ "$entry" == "$loc" ]] && in_list=true && break
    done
    if ! $in_list; then echo "‚ùå –õ–æ–∫–∞—Ü–∏—è '$loc' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"; exit 1; fi

    name_var="NAME_${loc}"
    echo "‚ÑπÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è '$loc':"
    echo "  name = ${!name_var:-$loc}"
    echo "  url  = ${CUSTOM_URL_GIT[$loc]:-(–ø–æ —à–∞–±–ª–æ–Ω—É)}"
    ;;

  remove)
    if [[ -z "$loc" ]]; then echo "‚ùó –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: git-tree-location remove <id>" && exit 1; fi
    grep -v -E "LOCATIONS\+\=\('$loc'\)|^NAME_${loc}=|^CUSTOM_URL_GIT

\[${loc}\]

=" "$CONFIG_FILE" > "$CONFIG_FILE.tmp"
    mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"
    echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ '$loc' –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    ;;

  *)
    echo "‚ùó –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "  git-tree-location add <id> [--name=...] [--url=...]"
    echo "  git-tree-location list"
    echo "  git-tree-location show <id>"
    echo "  git-tree-location remove <id>"
    ;;
esac
