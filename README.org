#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+options: author:t broken-links:nil c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:t todo:t |:t
#+title: README
#+date: <2021-05-02 Вс>
#+author:
#+email: mnasoft@gmail.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 27.2 (Org mode 9.4.4)
#+options: html-link-use-abs-url:nil html-postamble:auto
#+options: html-preamble:t html-scripts:t html-style:t
#+options: html5-fancy:nil tex:t
#+html_doctype: xhtml-strict
#+html_container: div
#+description:
#+keywords:
#+html_link_home:
#+html_link_up:
#+html_mathjax:
#+html_equation_reference_format: \eqref{%s}
#+html_head:
#+html_head_extra:
#+subtitle:
#+infojs_opt:
#+creator: <a href="https://www.gnu.org/software/emacs/">Emacs</a> 27.2 (<a href="https://orgmode.org">Org</a> mode 9.4.4)
#+latex_header:

* Назначение
 Пакет предназначен для выполнения однотипных операций на дереве
 каталогов, содержащем репозитории git.
* Установка
#+begin_src sh
   sudo ./INSTALL.run
#+end_src
* Удаление
#+begin_src sh
   sudo ./UNINSTALL.run 
#+end_src
* [9/9] Файлы
#+begin_src sh
   ls
#+end_src

- [X] git-tree  - работа с деревом репозиториев;
- [X] INSTALL.log - содержит перечень файлов, установленных
       комплексом шрифтов в системе;
- [X] INSTALL.run - сценарий установки;            
- [X] README.org - настоящий документ;
- [X] slynk-start-server - скрипт для запуска сервера Common Lisp;
- [X] slynk-start-server.lisp - функция для запуска сервера Common
  Lisp;
- [X] git-tree-graph.png - граф вызовов для файла git-tree (генерируется
  автоматически);
- [X] ToDo.org - заметки по направлению развития проекта;
- [X] UNINSTALL.run - содержит команды деинталляции комплекса скриптов
  в системе (генерируется автоматически);

* Команды
  1) =pull= - получение изменений с сервера;
  2) =push= - отправка изменений на сервер;
  3) =pullsh= - получение и отправка изменений;
  4) =add= - добавление изменений;
  5) =commit= - фиксация изменений;
  6) =all= - получение изменений с сервера, добавление изменений,
     фиксация изменений, отправка изменений на сервер;
  7) =readd= - удаление и повторное добавление удаленного репозитория в
     размещение =[pp|pz|pi|or|pb]=;
  8) =rm= - удаление удаленного репозитория в размещение =[pp|pz|pi|or|pb]=;
  9) clone - клонирование дерева репозиториев в размещение =[pp|pz|pi|or|pb]=;
  10) =make_git= - создание чистых репозиториев git:
      - =~/git= для расположения pp;
      - =~/git-big= для расположения pz;
  11) =remake_git= - удаляет и создает повтроно для: расположения pp в
      каталоге =~/git=; расположения pz в каталоге
      =~/git-big= чистые репозитории git, находящиеся в
      каталогах:
      - =~/quicklisp/local-projects/=;
      - =~/develop/=;
      - =~/elisp/=;
  12) =remake_xz= - удаляет и повторно создает:
      - для расположения pp в каталоге =~/xz= архивы =*.tar.xz=
        репозиториев =git=, находящихся в каталоге =~/git=;
      - для расположения =pz= в каталоге =~/xz-big= архивы
        =*.tar.xz= репозиториев =git=, находящихся в каталоге
        =~/git-big=;
  13) =remake_tar_xz= :
      - для расположения pp создает архив =xz.tar= из
        файлов с расширением =*.git.tar.xz=, находящихся в каталоге
        =~/xz=;
      - для расположения =pz= создает архив =xz-big.tar= из
        файлов с расширением =*.git.tar.xz=, находящихся в каталоге
        =~/xz-big=, и перемещает его в каталог
        =~/public_html/Common-Lisp-Programs/Archive=;
  14) =rs_local_pi= - выполняет синхронизацию папки =~/public_html/= с
      =mnasoft.ddns.mksat.net=;
  15) =rs_pi_local= : синхронизация mnasoft.ddns.mksat.net с папкой
      =~/public_html=;
  16) =rs_pi_html= - синхронизация папки
      =~/public_html/Common-Lisp-Programs/= с сервером
      =mnasoft.ddns.mksat.net=;
  17) =xz_git= - распаковка архивов =*.git.tar.xz= в каталоги с чистыми
      репозиториями для расположения =pp= и =pp=;
  18) =quicklisp= - создает в каталоге
      =~/public_html/Common-Lisp-Programs/Archive= файл
      =quicklisp.tar.xz=, содержащий данные для обновления =quicklisp=;
  19) =pacman= - копирует в какалог
      =~/public_html/Common-Lisp-Programs/Archive= пакетов и
      файлов синхронизации, необходимях для обновления msys2;
  20) =dot_emacs_d= - копирует в какалог
      =~/public_html/Common-Lisp-Programs/Archive= файлов из
      каталога =~/.emacs.d=;
  21) =add_aliases= - добавляет аббревиатуры для запуска команд =git=.
  
* Примеры использования
1. Перейдите в каталог, в котором содержатся репозитории git.
2. Выполните команду
#+begin_src sh
 git-tree
#+end_src
После добавления аббревиатур для запуска команд git при помощи:
#+begin_src sh
 git-tree add_aliases
#+end_src
становится возможным запускать команду при помощи аббревиатуры git:
#+begin_src sh
 git tree
#+end_src

* Граф вызовов данные                                              :noexport:
  #+name:dot-eg-table
  | check_dir_git         | make_repo_vars                 |
  | check_dir_xz          | make_repo_vars                 |
  | rm_git                | make_repo_vars                 |
  | remove_xz             | make_repo_vars                 |
  | make_git              | make_repo_vars                 |
  | remake_xz             | remove_xz                      |
  | remake_xz             | check_dir_xz                   |
  | remake_xz             | make_repo_vars                 |
  | remake_git            | rm_git                         |
  | remake_git            | make_git                       |
  | remake_tar_xz         | check_dir_public_html_clp_arch |
  | remake_tar_xz         | remake_xz                      |
  | remake_tar_xz         | make_repo_vars                 |
  | push                  | echo_short                     |
  | pull                  | echo_short                     |
  | add                   | echo_short                     |
  | readd                 | echo_short                     |
  | readd                 | make_repo_vars                 |
  | git_rm                | echo_short                     |
  | git_rm                | make_repo_vars                 |
  | git_clone             | make_repo_vars                 |
  | git_clone             | echo_short                     |
  | commit                | echo_short                     |
  | push_or_pull          | echo_short                     |
  | command_branch        | current_branch                 |
  | command_branch        | push_or_pull                   |
  | command_branch        | pull                           |
  | command_branch        | push                           |
  | command_branch        | add                            |
  | command_branch        | commit                         |
  | command_branch        | pull                           |
  | command_branch        | add                            |
  | command_branch        | commit                         |
  | command_branch        | push                           |
  | command_branch        | readd                          |
  | command_branch        | git_rm                         |
  | command_branch        | git_clone                      |
  | command               | echo_long_equal                |
  | command               | echo_long                      |
  | command               | command_branch                 |
  | command               | echo_long_plus                 |
  | rs_quicklisp          | check_dir_public_html_clp_arch |
  | rs_pacman             | check_dir_public_html_clp_arch |
  | rs_dot_emacs_d_public | check_dir_public_html_clp_arch |
  | cd_git_url            | make_repo_vars                 |
  | xz_git                | check_dir_git                  |
  | xz_git                | cd_git_url                     |
  | xz_git                | make_repo_vars                 |
  | show_location_usage   | show_usage                     |
  | fgt                   | show_usage                     |
  | fgt                   | show_location_usage            |
  | fgt                   | command                        |
  | fgt                   | remake_xz                      |
  | fgt                   | remake_tar_xz                  |
  | fgt                   | xz_git                         |
  | fgt                   | remake_git                     |
  | fgt                   | make_git                       |
  | fgt                   | rs_quicklisp                   |
  | fgt                   | rs_pacman                      |
  | fgt                   | rs_dot_emacs_d_public          |
  | fgt                   | reclone                        |
  | fgt                   | add_aliases                    |

  #+name: make-dot
  #+begin_src lisp :var table=dot-eg-table :results output :exports none

    (format t "rankdir=LR;~%")
    (mapcar
     #'(lambda (x)
         (format t "~s [label =~s, shape = \"box\"];~%" x x ))
     (remove-duplicates (apply #'append table)))

    (format t "~{~{~S~^ -> ~};~%~}" table)
  #+end_src

  #+RESULTS: make-dot
  #+begin_example
  rankdir=LR;
  "check_dir_git" [label ="check_dir_git", shape = "box"];
  "make_repo_vars" [label ="make_repo_vars", shape = "box"];
  "check_dir_xz" [label ="check_dir_xz", shape = "box"];
  "make_repo_vars" [label ="make_repo_vars", shape = "box"];
  "rm_git" [label ="rm_git", shape = "box"];
  "make_repo_vars" [label ="make_repo_vars", shape = "box"];
  "remove_xz" [label ="remove_xz", shape = "box"];
  "make_repo_vars" [label ="make_repo_vars", shape = "box"];
  "make_git" [label ="make_git", shape = "box"];
  "make_repo_vars" [label ="make_repo_vars", shape = "box"];
  "check_dir_git" -> "make_repo_vars";
  "check_dir_xz" -> "make_repo_vars";
  "rm_git" -> "make_repo_vars";
  "remove_xz" -> "make_repo_vars";
  "make_git" -> "make_repo_vars";
  #+end_example

* Граф вызовов 
  #+begin_src dot :file ./git-tree-graph.png :var input=make-dot :exports results
    digraph
    {
    $input
    }
    #+end_src

    #+RESULTS:
    [[file:./git-tree-graph.png]]
