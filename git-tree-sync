#!/bin/bash

# üëâ –§—É–Ω–∫—Ü–∏—è —Å–ø—Ä–∞–≤–∫–∏
usage() {
    echo -e "\nüß∞ USAGE: $0 [-all | <–∫–æ–ª-–≤–æ_–¥–Ω–µ–π>] [-bare <–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è>] [-compress] [--dry-run]"
    
    echo -e "\nüîç –û–ø–∏—Å–∞–Ω–∏–µ:"
    echo "  –°–∫–∞–Ω–∏—Ä—É–µ—Ç –≤—Å–µ –ø–æ–¥–∫–∞—Ç–∞–ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –∏ –≤—ã–≤–æ–¥–∏—Ç –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–º–º–∏—Ç–∞."
    echo "  –ú–æ–∂–Ω–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –∫–æ–º–º–∏—Ç–∞ (–≤ –¥–Ω—è—Ö), —Å–æ–∑–¥–∞–≤–∞—Ç—å bare-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏,"
    echo "  –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –≤ .tar.xz –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å dry-run –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏."
    echo "  –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤ —Ñ–∞–π–ª scan.log."

    echo -e "\nüìå –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:"
    echo "  -all            ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ (—ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç DAYS=99999)"
    echo "  <–∫–æ–ª-–≤–æ_–¥–Ω–µ–π>   ‚Äî —á–∏—Å–ª–æ –¥–Ω–µ–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–º–º–∏—Ç–∞"
    echo "  -bare <dir>     ‚Äî –ø—É—Ç—å –∫ –∫–∞—Ç–∞–ª–æ–≥—É, –∫—É–¥–∞ –±—É–¥—É—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã bare-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
    echo "  -compress       ‚Äî –≤–∫–ª—é—á–∞–µ—Ç —Å–∂–∞—Ç–∏–µ –∫–∞–∂–¥–æ–≥–æ bare-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –≤ –∞—Ä—Ö–∏–≤"
    echo "  --dry-run       ‚Äî —Å–∏–º—É–ª—è—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏–π –±–µ–∑ –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"
    echo "  --help          ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"

    echo -e "\nüìã –ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 -all"
    echo "  $0 30"
    echo "  $0 30 -bare /mnt/usb/git-sync"
    echo "  $0 30 -bare /mnt/usb/git-sync -compress"
    echo "  $0 30 -bare /mnt/usb/git-sync -compress --dry-run"
}

# üëâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–ª–∏ --help
if [[ $# -eq 0 || "$1" == "--help" ]]; then
    usage
    exit 0
fi

# üß© –†–∞–∑–±–æ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
DAYS=""
BARE_DIR=""
COMPRESS=false
DRY_RUN=false
LOGFILE="scan.log"

while [[ $# -gt 0 ]]; do
    case "$1" in
        -all)
            DAYS=99999
            shift
            ;;
        -bare)
            BARE_DIR="$2"
            shift 2
            ;;
        -compress)
            COMPRESS=true
            shift
            ;;
        --dry-run)
            DRY_RUN=true
            shift
            ;;
        --help)
            usage
            exit 0
            ;;
        *)
            DAYS="$1"
            shift
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ DAYS
if [[ -z "$DAYS" ]]; then
    echo "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π. –ò—Å–ø–æ–ª—å–∑—É–π -all –∏–ª–∏ —á–∏—Å–ª–æ."
    usage
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ bare-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [[ -n "$BARE_DIR" && $DRY_RUN == false ]]; then
    mkdir -p "$BARE_DIR" || { echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ $BARE_DIR"; exit 1; }
fi

tempfile=$(mktemp)
now=$(date +%s)

echo -e "\n===== –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ $(date '+%Y-%m-%d %H:%M:%S') (–ø–æ—Ä–æ–≥: $DAYS –¥–Ω–µ–π) =====" | tee -a "$LOGFILE"

find . -type d -name ".git" | while read gitdir; do
    repo_dir=$(dirname "$gitdir")
    cd "$repo_dir" || continue

    last_commit_date=$(git log -1 --format="%ci" 2>/dev/null)

    if [ -n "$last_commit_date" ]; then
        commit_ts=$(date -d "$last_commit_date" +%s)
        age_days=$(( (now - commit_ts) / 86400 ))

        if [ "$age_days" -le "$DAYS" ]; then
            echo "$last_commit_date|$repo_dir" >> "$tempfile"

            if [[ -n "$BARE_DIR" ]]; then
                repo_name=$(basename "$repo_dir")
                target="$BARE_DIR/$repo_name.git"
                archive="$BARE_DIR/$repo_name.git.tar.xz"

                if $DRY_RUN; then
                    echo "üß™ [dry-run] –°–æ–∑–¥–∞–ª –±—ã bare-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $target" | tee -a "$LOGFILE"
                    if $COMPRESS; then
                        echo "üß™ [dry-run] –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–ª –±—ã: $archive" | tee -a "$LOGFILE"
                    fi
                else
                    echo "üì¶ –°–æ–∑–¥–∞—é bare-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $target" | tee -a "$LOGFILE"
                    git clone --bare "$repo_dir" "$target" 2>/dev/null

                    if $COMPRESS; then
                        echo "üóúÔ∏è –ê—Ä—Ö–∏–≤–∏—Ä—É—é: $archive" | tee -a "$LOGFILE"
                        tar -cJf "$archive" -C "$BARE_DIR" "$repo_name.git"
                        rm -rf "$target"
                    fi
                fi
            fi
        fi
    fi

    cd - > /dev/null
done

# üìã –í—ã–≤–æ–¥
echo -e "\nüìã –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º –∫–æ–º–º–∏—Ç–æ–º –Ω–µ —Å—Ç–∞—Ä—à–µ $DAYS –¥–Ω–µ–π:\n" | tee -a "$LOGFILE"
sort "$tempfile" | while IFS="|" read date path; do
    echo "üïí $date ‚Üí üìÅ $path" | tee -a "$LOGFILE"
done

rm "$tempfile"
echo "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ. –õ–æ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ $LOGFILE"
